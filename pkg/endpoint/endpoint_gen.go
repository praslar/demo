// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "development-kit/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	StatusEndpoint     endpoint.Endpoint
	CreateDemoEndpoint endpoint.Endpoint
	UpdateDemoEndpoint endpoint.Endpoint
	GetOneDemoEndpoint endpoint.Endpoint
	DeleteDemoEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.DevelopmentKitService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		CreateDemoEndpoint: MakeCreateDemoEndpoint(s),
		DeleteDemoEndpoint: MakeDeleteDemoEndpoint(s),
		GetOneDemoEndpoint: MakeGetOneDemoEndpoint(s),
		StatusEndpoint:     MakeStatusEndpoint(s),
		UpdateDemoEndpoint: MakeUpdateDemoEndpoint(s),
	}
	for _, m := range mdw["Status"] {
		eps.StatusEndpoint = m(eps.StatusEndpoint)
	}
	for _, m := range mdw["CreateDemo"] {
		eps.CreateDemoEndpoint = m(eps.CreateDemoEndpoint)
	}
	for _, m := range mdw["UpdateDemo"] {
		eps.UpdateDemoEndpoint = m(eps.UpdateDemoEndpoint)
	}
	for _, m := range mdw["GetOneDemo"] {
		eps.GetOneDemoEndpoint = m(eps.GetOneDemoEndpoint)
	}
	for _, m := range mdw["DeleteDemo"] {
		eps.DeleteDemoEndpoint = m(eps.DeleteDemoEndpoint)
	}
	return eps
}
